@page "/"
@using System.Diagnostics
@rendermode RenderMode.InteractiveServer
@inject IJSRuntime JS

<script>
    window.setImage = async (imageElementId, imageStream) => {
        const arrayBuffer = await imageStream.arrayBuffer();
        const blob = new Blob([arrayBuffer]);
        const url = URL.createObjectURL(blob);
        const image = document.getElementById(imageElementId);
        image.onload = () => {
            URL.revokeObjectURL(url);
        }
        image.src = url;
    }
</script>

<PageTitle>Home</PageTitle>

<h2 class="justify-content-center">@TextError</h2>

<img id="image" class="rounded mx-auto d-block" src="data:image;base64, @imageSource" height="780" width="1620" />


@code
{
    public static string imageSource = "";
    public string? TextError;

    private static System.Timers.Timer aTimer;

    public Home() => StartTimer();

    public void StartTimer()
    {
        aTimer = new System.Timers.Timer(1000);
        aTimer.Elapsed += ViewFrame;
        aTimer.Enabled = true;
        aTimer.Start();
    }

    public void ViewFrame(Object source, System.Timers.ElapsedEventArgs e)
    {
        if(Image.ByteImage == null)
        {
            TextError = "Запросов с потоком не поступает";
            return;
        }
        TextError = "";
        imageSource = System.Convert.ToBase64String(Image.ByteImage.ToArray());
        InvokeAsync(StateHasChanged);
    }
}
